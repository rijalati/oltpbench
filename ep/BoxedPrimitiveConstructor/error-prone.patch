--- src/com/oltpbenchmark/util/json/JSONWriter.java
+++ src/com/oltpbenchmark/util/json/JSONWriter.java
@@ -312,5 +312,5 @@
      */
     public JSONWriter value(double d) throws JSONException {
-        return this.value(new Double(d));
+        return this.value(Double.valueOf(d));
     }
 
--- src/com/oltpbenchmark/util/json/JSONObject.java
+++ src/com/oltpbenchmark/util/json/JSONObject.java
@@ -845,5 +845,5 @@
             Object o = opt(key);
             return o instanceof Number ? ((Number)o).doubleValue() :
-                new Double((String)o).doubleValue();
+                Double.valueOf((String)o).doubleValue();
         } catch (Exception e) {
             return defaultValue;
@@ -996,5 +996,5 @@
      */
     public JSONObject put(String key, double value) throws JSONException {
-        put(key, new Double(value));
+        put(key, Double.valueOf(value));
         return this;
     }
@@ -1010,5 +1010,5 @@
      */
     public JSONObject put(String key, int value) throws JSONException {
-        put(key, new Integer(value));
+        put(key, Integer.valueOf(value));
         return this;
     }
@@ -1024,5 +1024,5 @@
      */
     public JSONObject put(String key, long value) throws JSONException {
-        put(key, new Long(value));
+        put(key, Long.valueOf(value));
         return this;
     }
@@ -1225,6 +1225,6 @@
                         (s.charAt(1) == 'x' || s.charAt(1) == 'X')) {
                     try {
-                        return new Integer(Integer.parseInt(s.substring(2),
-                                16));
+                        return Integer.parseInt(s.substring(2),
+                                16);
                     } catch (Exception e) {
                         /* Ignore the error */
@@ -1232,5 +1232,5 @@
                 } else {
                     try {
-                        return new Integer(Integer.parseInt(s, 8));
+                        return Integer.parseInt(s, 8);
                     } catch (Exception e) {
                         /* Ignore the error */
@@ -1239,11 +1239,11 @@
             }
             try {
-                return new Integer(s);
+                return Integer.valueOf(s);
             } catch (Exception e) {
                 try {
-                    return new Long(s);
+                    return Long.valueOf(s);
                 } catch (Exception f) {
                     try {
-                        return new Double(s);
+                        return Double.valueOf(s);
                     }  catch (Exception g) {
                         /* Ignore the error */
--- src/com/oltpbenchmark/util/json/JSONArray.java
+++ src/com/oltpbenchmark/util/json/JSONArray.java
@@ -155,5 +155,5 @@
             case ')':
                 if (q != c) {
-                    throw x.syntaxError("Expected a '" + new Character(q) + "'");
+                    throw x.syntaxError("Expected a '" + q + "'");
                 }
                 return;
@@ -636,5 +636,5 @@
      */
     public JSONArray put(double value) throws JSONException {
-        Double d = new Double(value);
+        Double d = value;
         JSONObject.testValidity(d);
         put(d);
@@ -650,5 +650,5 @@
      */
     public JSONArray put(int value) {
-        put(new Integer(value));
+        put(Integer.valueOf(value));
         return this;
     }
@@ -662,5 +662,5 @@
      */
     public JSONArray put(long value) {
-        put(new Long(value));
+        put(Long.valueOf(value));
         return this;
     }
@@ -733,5 +733,5 @@
      */
     public JSONArray put(int index, double value) throws JSONException {
-        put(index, new Double(value));
+        put(index, Double.valueOf(value));
         return this;
     }
@@ -748,5 +748,5 @@
      */
     public JSONArray put(int index, int value) throws JSONException {
-        put(index, new Integer(value));
+        put(index, Integer.valueOf(value));
         return this;
     }
@@ -763,5 +763,5 @@
      */
     public JSONArray put(int index, long value) throws JSONException {
-        put(index, new Long(value));
+        put(index, Long.valueOf(value));
         return this;
     }
--- src/com/oltpbenchmark/benchmarks/auctionmark/AuctionMarkWorker.java
+++ src/com/oltpbenchmark/benchmarks/auctionmark/AuctionMarkWorker.java
@@ -815,7 +815,7 @@
         double buyer_credit = 0d;
 
-	Integer ip_id_cnt = ip_id_cntrs.get(new Long(encodedItemId));
+	Integer ip_id_cnt = ip_id_cntrs.get(Long.valueOf(encodedItemId));
 	if (ip_id_cnt == null) {
-	    ip_id_cnt = new Integer(0);
+	    ip_id_cnt = 0;
 	}
 	
